if (is.data.frame(df.temp.massdata==T)){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip-herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout==T)){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
}
}
}
}
View(df.master.massdata)
View(df.master.massdata)
#optional
index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata==T)){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout==T)){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
fld_MastTables
paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep="")
paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep="")
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#function to fetch data tables
fetch_table <- function(file_path=NA,str_pattern){
file_list = list.files(file_path,full.names = T,pattern = paste('*',str_pattern,'*',sep=""))
if (length(file_list)==1){
df.out = read.csv(file_list)
return(df.out)
} else if (length(file_list)>1){
warning("More than one file found!!!")
return("More than one table found!!!")
} else {
warning(paste("No table found!", file_path))
return("No table found!")
}
}
#test section
test_path = 'D:/NEON/Data_Unzipped_Raw/NEON_clip-herb/NEON.D01.BART.DP1.10023.001.2014-07.basic.20210123T023002Z.RELEASE-2021'
fetch_table(file_path = test_path,'massdata') # should work
fetch_table(file_path = test_path,'10023') # should find more than one
fetch_table(file_path = test_path,'massdadfa') # should fail to find a file
#optional
index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata==T)){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout==T)){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
View(df.master.NEON_clip_herb.summary)
if (is.data.frame(df.temp.massdata==T)){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
is.data.frame(df.temp.massdata==T)
(is.data.frame(df.temp.perbout)==T)
#optional
index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata)==T){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout)==T){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#function to fetch data tables
fetch_table <- function(file_path=NA,str_pattern){
file_list = list.files(file_path,full.names = T,pattern = paste('*',str_pattern,'*',sep=""))
if (length(file_list)==1){
df.out = read.csv(file_list)
return(df.out)
} else if (length(file_list)>1){
warning("More than one file found!!!")
return("More than one table found!!!")
} else {
warning(paste("No table found!", file_path))
return("No table found!")
}
}
#test section
test_path = 'D:/NEON/Data_Unzipped_Raw/NEON_clip-herb/NEON.D01.BART.DP1.10023.001.2014-07.basic.20210123T023002Z.RELEASE-2021'
fetch_table(file_path = test_path,'massdata') # should work
fetch_table(file_path = test_path,'10023') # should find more than one
fetch_table(file_path = test_path,'massdadfa') # should fail to find a file
#optional
index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata)==T){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout)==T){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#function to fetch data tables
fetch_table <- function(file_path=NA,str_pattern){
file_list = list.files(file_path,full.names = T,pattern = paste('*',str_pattern,'*',sep=""))
if (length(file_list)==1){
df.out = read.csv(file_list)
return(df.out)
} else if (length(file_list)>1){
warning("More than one file found!!!")
return("More than one table found!!!")
} else {
warning(paste("No table found!", file_path))
return("No table found!")
}
}
#test section
test_path = 'D:/NEON/Data_Unzipped_Raw/NEON_clip-herb/NEON.D01.BART.DP1.10023.001.2014-07.basic.20210123T023002Z.RELEASE-2021'
fetch_table(file_path = test_path,'massdata') # should work
fetch_table(file_path = test_path,'10023') # should find more than one
fetch_table(file_path = test_path,'massdadfa') # should fail to find a file
#optional
#index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
index_table=index_table[index_table$SampleType=="NEON_litterfall",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
} else if (temp_type=="NEON_litterfall"){
df.master.litter.massdata = fetch_table(temp_path,'massdata')
df.master.litter.pertrap  = fetch_table(temp_path,'pertrap')
#print(nrow(df.master.massdata))
df.master.NEON_litterfall.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.litter.massdata),"Path"=temp_path)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.master.litter.pertrap),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata)==T){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout)==T){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
} else if(temp_type=="NEON_litterfall"){
df.temp.litter.massdata = fetch_table(temp_path,'massdata')
df.temp.litter.pertrap = fetch_table(temp_path,'pertrap')
#print(nrow(df.temp.litter.massdata))
if (is.data.frame(df.temp.litter.massdata)==T){
df.master.litter.massdata = rbind(df.master.massdata,df.temp.litter.massdata)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.litter.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.litter.pertrap)==T){
df.master.litter.pertrap  = rbind(df.master.litter.pertrap,df.temp.litter.pertrap)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.temp.litter.pertrap),"Path"=temp_path))
write.csv(df.master.pertrap ,paste(fld_MastTables,'MASTER-',temp_type,'_pertrap_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#function to fetch data tables
fetch_table <- function(file_path=NA,str_pattern){
file_list = list.files(file_path,full.names = T,pattern = paste('*',str_pattern,'*',sep=""))
if (length(file_list)==1){
df.out = read.csv(file_list)
return(df.out)
} else if (length(file_list)>1){
warning("More than one file found!!!")
return("More than one table found!!!")
} else {
warning(paste("No table found!", file_path))
return("No table found!")
}
}
#test section
test_path = 'D:/NEON/Data_Unzipped_Raw/NEON_clip-herb/NEON.D01.BART.DP1.10023.001.2014-07.basic.20210123T023002Z.RELEASE-2021'
fetch_table(file_path = test_path,'massdata') # should work
fetch_table(file_path = test_path,'10023') # should find more than one
fetch_table(file_path = test_path,'massdadfa') # should fail to find a file
#optional
#index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
index_table=index_table[index_table$SampleType=="NEON_litterfall",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
} else if (temp_type=="NEON_litterfall"){
df.master.litter.massdata = fetch_table(temp_path,'massdata')
df.master.litter.pertrap  = fetch_table(temp_path,'pertrap')
#print(nrow(df.master.massdata))
df.master.NEON_litterfall.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.litter.massdata),"Path"=temp_path)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.master.litter.pertrap),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata)==T){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout)==T){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
} else if(temp_type=="NEON_litterfall"){
df.temp.litter.massdata = fetch_table(temp_path,'massdata')
df.temp.litter.pertrap = fetch_table(temp_path,'pertrap')
#print(nrow(df.temp.litter.massdata))
if (is.data.frame(df.temp.litter.massdata)==T){
df.master.litter.massdata = rbind(df.master.massdata,df.temp.litter.massdata)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.litter.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.litter.pertrap)==T){
df.master.litter.pertrap  = rbind(df.master.litter.pertrap,df.temp.litter.pertrap)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.temp.litter.pertrap),"Path"=temp_path))
write.csv(df.master.pertrap ,paste(fld_MastTables,'MASTER-',temp_type,'_pertrap_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
#Folders
fld_rawdata = "D:/NEON/Data_Unzipped_Raw/" #folder where the rawdata is stored
fld_TempTables = "D:/NEON/Data_Preprocessed/TempTables/" #Temporary folder for dumping temporary tables
fld_MastTables = "D:/NEON/Data_Preprocessed/MasterTables/" #Folder for dumping master table
#open index table
index_table = read.csv("D:/NEON/Data_Preprocessed/IndexTables/NEON_Tables_Index_csv.csv")
unique(index_table$SampleType)
#function to fetch data tables
fetch_table <- function(file_path=NA,str_pattern){
file_list = list.files(file_path,full.names = T,pattern = paste('*',str_pattern,'*',sep=""))
if (length(file_list)==1){
df.out = read.csv(file_list)
return(df.out)
} else if (length(file_list)>1){
warning("More than one file found!!!")
return("More than one table found!!!")
} else {
warning(paste("No table found!", file_path))
return("No table found!")
}
}
#test section
test_path = 'D:/NEON/Data_Unzipped_Raw/NEON_clip-herb/NEON.D01.BART.DP1.10023.001.2014-07.basic.20210123T023002Z.RELEASE-2021'
fetch_table(file_path = test_path,'massdata') # should work
fetch_table(file_path = test_path,'10023') # should find more than one
fetch_table(file_path = test_path,'massdadfa') # should fail to find a file
#optional
#index_table=index_table[index_table$SampleType=="NEON_clip-herb",]
index_table=index_table[index_table$SampleType=="NEON_litterfall",]
#this loop iterates and creates a master table per measurement that can be used for further queries later
for (i in 1:nrow(index_table)){
temp_type = index_table$SampleType[i]
temp_path = paste(fld_rawdata,index_table$Fullpath[i],sep="")
print(paste(i,'of',nrow(index_table)))
if (i==1){
if (temp_type=="NEON_clip-herb"){
df.master.massdata = fetch_table(temp_path,'massdata')
df.master.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.master.massdata))
df.master.NEON_clip_herb.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.massdata),"Path"=temp_path)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.master.perbout),"Path"=temp_path))
} else if (temp_type=="NEON_litterfall"){
df.master.litter.massdata = fetch_table(temp_path,'massdata')
df.master.litter.pertrap  = fetch_table(temp_path,'pertrap')
#print(nrow(df.master.massdata))
df.master.NEON_litterfall.summary = data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.master.litter.massdata),"Path"=temp_path)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.master.litter.pertrap),"Path"=temp_path))
}
} else {
if (temp_type=="NEON_clip-herb"){
df.temp.massdata = fetch_table(temp_path,'massdata')
df.temp.perbout = fetch_table(temp_path,'perbout')
#print(nrow(df.temp.massdata))
if (is.data.frame(df.temp.massdata)==T){
df.master.massdata = rbind(df.master.massdata,df.temp.massdata)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.massdata),"Path"=temp_path))
write.csv(df.master.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.perbout)==T){
df.master.perbout  = rbind(df.master.perbout,df.temp.perbout)
df.master.NEON_clip_herb.summary = rbind(df.master.NEON_clip_herb.summary,
data.frame('i'=i,"Variable"='perbout',"nrows"=nrow(df.temp.perbout),"Path"=temp_path))
write.csv(df.master.perbout ,paste(fld_MastTables,'MASTER-',temp_type,'_perbout_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_clip_herb.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
} else if(temp_type=="NEON_litterfall"){
df.temp.litter.massdata = fetch_table(temp_path,'massdata')
df.temp.litter.pertrap = fetch_table(temp_path,'pertrap')
#print(nrow(df.temp.litter.massdata))
if (is.data.frame(df.temp.litter.massdata)==T){
df.master.litter.massdata = rbind(df.master.litter.massdata,df.temp.litter.massdata)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='massdata',"nrows"=nrow(df.temp.litter.massdata),"Path"=temp_path))
write.csv(df.master.litter.massdata,paste(fld_MastTables,'MASTER-',temp_type,'_massdata_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
if (is.data.frame(df.temp.litter.pertrap)==T){
df.master.litter.pertrap  = rbind(df.master.litter.pertrap,df.temp.litter.pertrap)
df.master.NEON_litterfall.summary = rbind(df.master.NEON_litterfall.summary,
data.frame('i'=i,"Variable"='pertrap',"nrows"=nrow(df.temp.litter.pertrap),"Path"=temp_path))
write.csv(df.master.litter.pertrap ,paste(fld_MastTables,'MASTER-',temp_type,'_pertrap_csv.csv',sep=""),row.names = F)
write.csv(df.master.NEON_litterfall.summary,paste(fld_MastTables,'MASTER-',temp_type,'_summary_csv.csv',sep=""),row.names = F)
}
}
}
}
